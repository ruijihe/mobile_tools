(function(){"use strict";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ws="144";class ws{addEventListener(t,s){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[t]===void 0&&(e[t]=[]),e[t].indexOf(s)===-1&&e[t].push(s)}hasEventListener(t,s){if(this._listeners===void 0)return!1;const e=this._listeners;return e[t]!==void 0&&e[t].indexOf(s)!==-1}removeEventListener(t,s){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const n=i.indexOf(s);n!==-1&&i.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const i=e.slice(0);for(let n=0,r=i.length;n<r;n++)i[n].call(this,t);t.target=null}}}const q=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Jt(){const d=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(q[d&255]+q[d>>8&255]+q[d>>16&255]+q[d>>24&255]+"-"+q[t&255]+q[t>>8&255]+"-"+q[t>>16&15|64]+q[t>>24&255]+"-"+q[s&63|128]+q[s>>8&255]+"-"+q[s>>16&255]+q[s>>24&255]+q[e&255]+q[e>>8&255]+q[e>>16&255]+q[e>>24&255]).toLowerCase()}function tt(d,t,s){return Math.max(t,Math.min(s,d))}function Qt(d,t){switch(t.constructor){case Float32Array:return d;case Uint16Array:return d/65535;case Uint8Array:return d/255;case Int16Array:return Math.max(d/32767,-1);case Int8Array:return Math.max(d/127,-1);default:throw new Error("Invalid component type.")}}function L(d,t){switch(t.constructor){case Float32Array:return d;case Uint16Array:return Math.round(d*65535);case Uint8Array:return Math.round(d*255);case Int16Array:return Math.round(d*32767);case Int8Array:return Math.round(d*127);default:throw new Error("Invalid component type.")}}class v{constructor(t=0,s=0){v.prototype.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,e=this.y,i=t.elements;return this.x=i[0]*s+i[3]*e+i[6],this.y=i[1]*s+i[4]*e+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y;return s*s+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const e=Math.cos(s),i=Math.sin(s),n=this.x-t.x,r=this.y-t.y;return this.x=n*e-r*i+t.x,this.y=n*i+r*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class _t{constructor(){_t.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,s,e,i,n,r,o,a,c){const h=this.elements;return h[0]=t,h[1]=i,h[2]=o,h[3]=s,h[4]=n,h[5]=a,h[6]=e,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}extractBasis(t,s,e){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,n=this.elements,r=e[0],o=e[3],a=e[6],c=e[1],h=e[4],l=e[7],u=e[2],f=e[5],m=e[8],y=i[0],x=i[3],p=i[6],b=i[1],g=i[4],_=i[7],w=i[2],z=i[5],A=i[8];return n[0]=r*y+o*b+a*w,n[3]=r*x+o*g+a*z,n[6]=r*p+o*_+a*A,n[1]=c*y+h*b+l*w,n[4]=c*x+h*g+l*z,n[7]=c*p+h*_+l*A,n[2]=u*y+f*b+m*w,n[5]=u*x+f*g+m*z,n[8]=u*p+f*_+m*A,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],r=t[4],o=t[5],a=t[6],c=t[7],h=t[8];return s*r*h-s*o*c-e*n*h+e*o*a+i*n*c-i*r*a}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],r=t[4],o=t[5],a=t[6],c=t[7],h=t[8],l=h*r-o*c,u=o*a-h*n,f=c*n-r*a,m=s*l+e*u+i*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/m;return t[0]=l*y,t[1]=(i*c-h*e)*y,t[2]=(o*e-i*r)*y,t[3]=u*y,t[4]=(h*s-i*a)*y,t[5]=(i*n-o*s)*y,t[6]=f*y,t[7]=(e*a-c*s)*y,t[8]=(r*s-e*n)*y,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,e,i,n,r,o){const a=Math.cos(n),c=Math.sin(n);return this.set(e*a,e*c,-e*(a*r+c*o)+r+t,-i*c,i*a,-i*(-c*r+a*o)+o+s,0,0,1),this}scale(t,s){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=s,e[4]*=s,e[7]*=s,this}rotate(t){const s=Math.cos(t),e=Math.sin(t),i=this.elements,n=i[0],r=i[3],o=i[6],a=i[1],c=i[4],h=i[7];return i[0]=s*n+e*a,i[3]=s*r+e*c,i[6]=s*o+e*h,i[1]=-e*n+s*a,i[4]=-e*r+s*c,i[7]=-e*o+s*h,this}translate(t,s){const e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=s*e[2],e[4]+=s*e[5],e[7]+=s*e[8],this}equals(t){const s=this.elements,e=t.elements;for(let i=0;i<9;i++)if(s[i]!==e[i])return!1;return!0}fromArray(t,s=0){for(let e=0;e<9;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function be(d){for(let t=d.length-1;t>=0;--t)if(d[t]>=65535)return!0;return!1}function Ys(d){return document.createElementNS("http://www.w3.org/1999/xhtml",d)}function Ms(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}let zt;class we{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let s;if(t instanceof HTMLCanvasElement)s=t;else{zt===void 0&&(zt=Ys("canvas")),zt.width=t.width,zt.height=t.height;const e=zt.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),s=zt}return s.width>2048||s.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),s.toDataURL("image/jpeg",.6)):s.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const s=Ys("canvas");s.width=t.width,s.height=t.height;const e=s.getContext("2d");e.drawImage(t,0,0,t.width,t.height);const i=e.getImageData(0,0,t.width,t.height),n=i.data;for(let r=0;r<n.length;r++)n[r]=Ms(n[r]/255)*255;return e.putImageData(i,0,0),s}else if(t.data){const s=t.data.slice(0);for(let e=0;e<s.length;e++)s instanceof Uint8Array||s instanceof Uint8ClampedArray?s[e]=Math.floor(Ms(s[e]/255)*255):s[e]=Ms(s[e]);return{data:s,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Me{constructor(t=null){this.isSource=!0,this.uuid=Jt(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const s=t===void 0||typeof t=="string";if(!s&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const e={uuid:this.uuid,url:""},i=this.data;if(i!==null){let n;if(Array.isArray(i)){n=[];for(let r=0,o=i.length;r<o;r++)i[r].isDataTexture?n.push(_s(i[r].image)):n.push(_s(i[r]))}else n=_s(i);e.url=n}return s||(t.images[this.uuid]=e),e}}function _s(d){return typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap?we.getDataURL(d):d.data?{data:Array.from(d.data),width:d.width,height:d.height,type:d.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _e=0;class Nt extends ws{constructor(t=Nt.DEFAULT_IMAGE,s=Nt.DEFAULT_MAPPING,e=1001,i=1001,n=1006,r=1008,o=1023,a=1009,c=1,h=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_e++}),this.uuid=Jt(),this.name="",this.source=new Me(t),this.mipmaps=[],this.mapping=s,this.wrapS=e,this.wrapT=i,this.magFilter=n,this.minFilter=r,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=a,this.offset=new v(0,0),this.repeat=new v(1,1),this.center=new v(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _t,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const s=t===void 0||typeof t=="string";if(!s&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(e.userData=this.userData),s||(t.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Nt.DEFAULT_IMAGE=null,Nt.DEFAULT_MAPPING=300;class vt{constructor(t=0,s=0,e=0,i=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=e,this._w=i}static slerpFlat(t,s,e,i,n,r,o){let a=e[i+0],c=e[i+1],h=e[i+2],l=e[i+3];const u=n[r+0],f=n[r+1],m=n[r+2],y=n[r+3];if(o===0){t[s+0]=a,t[s+1]=c,t[s+2]=h,t[s+3]=l;return}if(o===1){t[s+0]=u,t[s+1]=f,t[s+2]=m,t[s+3]=y;return}if(l!==y||a!==u||c!==f||h!==m){let x=1-o;const p=a*u+c*f+h*m+l*y,b=p>=0?1:-1,g=1-p*p;if(g>Number.EPSILON){const w=Math.sqrt(g),z=Math.atan2(w,p*b);x=Math.sin(x*z)/w,o=Math.sin(o*z)/w}const _=o*b;if(a=a*x+u*_,c=c*x+f*_,h=h*x+m*_,l=l*x+y*_,x===1-o){const w=1/Math.sqrt(a*a+c*c+h*h+l*l);a*=w,c*=w,h*=w,l*=w}}t[s]=a,t[s+1]=c,t[s+2]=h,t[s+3]=l}static multiplyQuaternionsFlat(t,s,e,i,n,r){const o=e[i],a=e[i+1],c=e[i+2],h=e[i+3],l=n[r],u=n[r+1],f=n[r+2],m=n[r+3];return t[s]=o*m+h*l+a*f-c*u,t[s+1]=a*m+h*u+c*l-o*f,t[s+2]=c*m+h*f+o*u-a*l,t[s+3]=h*m-o*l-a*u-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,e,i){return this._x=t,this._y=s,this._z=e,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){const e=t._x,i=t._y,n=t._z,r=t._order,o=Math.cos,a=Math.sin,c=o(e/2),h=o(i/2),l=o(n/2),u=a(e/2),f=a(i/2),m=a(n/2);switch(r){case"XYZ":this._x=u*h*l+c*f*m,this._y=c*f*l-u*h*m,this._z=c*h*m+u*f*l,this._w=c*h*l-u*f*m;break;case"YXZ":this._x=u*h*l+c*f*m,this._y=c*f*l-u*h*m,this._z=c*h*m-u*f*l,this._w=c*h*l+u*f*m;break;case"ZXY":this._x=u*h*l-c*f*m,this._y=c*f*l+u*h*m,this._z=c*h*m+u*f*l,this._w=c*h*l-u*f*m;break;case"ZYX":this._x=u*h*l-c*f*m,this._y=c*f*l+u*h*m,this._z=c*h*m-u*f*l,this._w=c*h*l+u*f*m;break;case"YZX":this._x=u*h*l+c*f*m,this._y=c*f*l+u*h*m,this._z=c*h*m-u*f*l,this._w=c*h*l-u*f*m;break;case"XZY":this._x=u*h*l-c*f*m,this._y=c*f*l-u*h*m,this._z=c*h*m+u*f*l,this._w=c*h*l+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return s!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const e=s/2,i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,e=s[0],i=s[4],n=s[8],r=s[1],o=s[5],a=s[9],c=s[2],h=s[6],l=s[10],u=e+o+l;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-a)*f,this._y=(n-c)*f,this._z=(r-i)*f}else if(e>o&&e>l){const f=2*Math.sqrt(1+e-o-l);this._w=(h-a)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(n+c)/f}else if(o>l){const f=2*Math.sqrt(1+o-e-l);this._w=(n-c)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(a+h)/f}else{const f=2*Math.sqrt(1+l-e-o);this._w=(r-i)/f,this._x=(n+c)/f,this._y=(a+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let e=t.dot(s)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(tt(this.dot(t),-1,1)))}rotateTowards(t,s){const e=this.angleTo(t);if(e===0)return this;const i=Math.min(1,s/e);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const e=t._x,i=t._y,n=t._z,r=t._w,o=s._x,a=s._y,c=s._z,h=s._w;return this._x=e*h+r*o+i*c-n*a,this._y=i*h+r*a+n*o-e*c,this._z=n*h+r*c+e*a-i*o,this._w=r*h-e*o-i*a-n*c,this._onChangeCallback(),this}slerp(t,s){if(s===0)return this;if(s===1)return this.copy(t);const e=this._x,i=this._y,n=this._z,r=this._w;let o=r*t._w+e*t._x+i*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=e,this._y=i,this._z=n,this;const a=1-o*o;if(a<=Number.EPSILON){const f=1-s;return this._w=f*r+s*this._w,this._x=f*e+s*this._x,this._y=f*i+s*this._y,this._z=f*n+s*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),h=Math.atan2(c,o),l=Math.sin((1-s)*h)/c,u=Math.sin(s*h)/c;return this._w=r*l+this._w*u,this._x=e*l+this._x*u,this._y=i*l+this._y*u,this._z=n*l+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,s,e){return this.copy(t).slerp(s,e)}random(){const t=Math.random(),s=Math.sqrt(1-t),e=Math.sqrt(t),i=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(s*Math.cos(i),e*Math.sin(n),e*Math.cos(n),s*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class M{constructor(t=0,s=0,e=0){M.prototype.isVector3=!0,this.x=t,this.y=s,this.z=e}set(t,s,e){return e===void 0&&(e=this.z),this.x=t,this.y=s,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return this.applyQuaternion(Zs.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(Zs.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,e=this.y,i=this.z,n=t.elements;return this.x=n[0]*s+n[3]*e+n[6]*i,this.y=n[1]*s+n[4]*e+n[7]*i,this.z=n[2]*s+n[5]*e+n[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,e=this.y,i=this.z,n=t.elements,r=1/(n[3]*s+n[7]*e+n[11]*i+n[15]);return this.x=(n[0]*s+n[4]*e+n[8]*i+n[12])*r,this.y=(n[1]*s+n[5]*e+n[9]*i+n[13])*r,this.z=(n[2]*s+n[6]*e+n[10]*i+n[14])*r,this}applyQuaternion(t){const s=this.x,e=this.y,i=this.z,n=t.x,r=t.y,o=t.z,a=t.w,c=a*s+r*i-o*e,h=a*e+o*s-n*i,l=a*i+n*e-r*s,u=-n*s-r*e-o*i;return this.x=c*a+u*-n+h*-o-l*-r,this.y=h*a+u*-r+l*-n-c*-o,this.z=l*a+u*-o+c*-r-h*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,e=this.y,i=this.z,n=t.elements;return this.x=n[0]*s+n[4]*e+n[8]*i,this.y=n[1]*s+n[5]*e+n[9]*i,this.z=n[2]*s+n[6]*e+n[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(s,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,e){return this.x=t.x+(s.x-t.x)*e,this.y=t.y+(s.y-t.y)*e,this.z=t.z+(s.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,s){const e=t.x,i=t.y,n=t.z,r=s.x,o=s.y,a=s.z;return this.x=i*a-n*o,this.y=n*r-e*a,this.z=e*o-i*r,this}projectOnVector(t){const s=t.lengthSq();if(s===0)return this.set(0,0,0);const e=t.dot(this)/s;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return zs.copy(this).projectOnVector(t),this.sub(zs)}reflect(t){return this.sub(zs.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(s===0)return Math.PI/2;const e=this.dot(t)/s;return Math.acos(tt(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,e=this.y-t.y,i=this.z-t.z;return s*s+e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,e){const i=Math.sin(s)*t;return this.x=i*Math.sin(e),this.y=Math.cos(s)*t,this.z=i*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,e){return this.x=t*Math.sin(s),this.y=e,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=e,this.z=i,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,s*4)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,s*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,s=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(s),this.y=e*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zs=new M,Zs=new vt;class Z{constructor(t=new M(1/0,1/0,1/0),s=new M(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,e=1/0,i=1/0,n=-1/0,r=-1/0,o=-1/0;for(let a=0,c=t.length;a<c;a+=3){const h=t[a],l=t[a+1],u=t[a+2];h<s&&(s=h),l<e&&(e=l),u<i&&(i=u),h>n&&(n=h),l>r&&(r=l),u>o&&(o=u)}return this.min.set(s,e,i),this.max.set(n,r,o),this}setFromBufferAttribute(t){let s=1/0,e=1/0,i=1/0,n=-1/0,r=-1/0,o=-1/0;for(let a=0,c=t.count;a<c;a++){const h=t.getX(a),l=t.getY(a),u=t.getZ(a);h<s&&(s=h),l<e&&(e=l),u<i&&(i=u),h>n&&(n=h),l>r&&(r=l),u>o&&(o=u)}return this.min.set(s,e,i),this.max.set(n,r,o),this}setFromPoints(t){this.makeEmpty();for(let s=0,e=t.length;s<e;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const e=gt.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const e=t.geometry;if(e!==void 0)if(s&&e.attributes!=null&&e.attributes.position!==void 0){const n=e.attributes.position;for(let r=0,o=n.count;r<o;r++)gt.fromBufferAttribute(n,r).applyMatrix4(t.matrixWorld),this.expandByPoint(gt)}else e.boundingBox===null&&e.computeBoundingBox(),As.copy(e.boundingBox),As.applyMatrix4(t.matrixWorld),this.union(As);const i=t.children;for(let n=0,r=i.length;n<r;n++)this.expandByObject(i[n],s);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,gt),gt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,e;return t.normal.x>0?(s=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),s<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Dt),Kt.subVectors(this.max,Dt),At.subVectors(t.a,Dt),St.subVectors(t.b,Dt),Bt.subVectors(t.c,Dt),lt.subVectors(St,At),ut.subVectors(Bt,St),bt.subVectors(At,Bt);let s=[0,-lt.z,lt.y,0,-ut.z,ut.y,0,-bt.z,bt.y,lt.z,0,-lt.x,ut.z,0,-ut.x,bt.z,0,-bt.x,-lt.y,lt.x,0,-ut.y,ut.x,0,-bt.y,bt.x,0];return!Ss(s,At,St,Bt,Kt)||(s=[1,0,0,0,1,0,0,0,1],!Ss(s,At,St,Bt,Kt))?!1:(ts.crossVectors(lt,ut),s=[ts.x,ts.y,ts.z],Ss(s,At,St,Bt,Kt))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return gt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(gt).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(st[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),st[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),st[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),st[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),st[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),st[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),st[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),st[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(st),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const st=[new M,new M,new M,new M,new M,new M,new M,new M],gt=new M,As=new Z,At=new M,St=new M,Bt=new M,lt=new M,ut=new M,bt=new M,Dt=new M,Kt=new M,ts=new M,wt=new M;function Ss(d,t,s,e,i){for(let n=0,r=d.length-3;n<=r;n+=3){wt.fromArray(d,n);const o=i.x*Math.abs(wt.x)+i.y*Math.abs(wt.y)+i.z*Math.abs(wt.z),a=t.dot(wt),c=s.dot(wt),h=e.dot(wt);if(Math.max(-Math.max(a,c,h),Math.min(a,c,h))>o)return!1}return!0}const ze=new Z,Hs=new M,ss=new M,Bs=new M;class js{constructor(t=new M,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const e=this.center;s!==void 0?e.copy(s):ze.setFromPoints(t).getCenter(e);let i=0;for(let n=0,r=t.length;n<r;n++)i=Math.max(i,e.distanceToSquared(t[n]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const e=this.center.distanceToSquared(t);return s.copy(t),e>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Bs.subVectors(t,this.center);const s=Bs.lengthSq();if(s>this.radius*this.radius){const e=Math.sqrt(s),i=(e-this.radius)*.5;this.center.add(Bs.multiplyScalar(i/e)),this.radius+=i}return this}union(t){return this.center.equals(t.center)===!0?ss.set(0,0,1).multiplyScalar(t.radius):ss.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Hs.copy(t.center).add(ss)),this.expandByPoint(Hs.copy(t.center).sub(ss)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class D{constructor(){D.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,s,e,i,n,r,o,a,c,h,l,u,f,m,y,x){const p=this.elements;return p[0]=t,p[4]=s,p[8]=e,p[12]=i,p[1]=n,p[5]=r,p[9]=o,p[13]=a,p[2]=c,p[6]=h,p[10]=l,p[14]=u,p[3]=f,p[7]=m,p[11]=y,p[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new D().fromArray(this.elements)}copy(t){const s=this.elements,e=t.elements;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}copyPosition(t){const s=this.elements,e=t.elements;return s[12]=e[12],s[13]=e[13],s[14]=e[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,e){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,s,e){return this.set(t.x,s.x,e.x,0,t.y,s.y,e.y,0,t.z,s.z,e.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,e=t.elements,i=1/Tt.setFromMatrixColumn(t,0).length(),n=1/Tt.setFromMatrixColumn(t,1).length(),r=1/Tt.setFromMatrixColumn(t,2).length();return s[0]=e[0]*i,s[1]=e[1]*i,s[2]=e[2]*i,s[3]=0,s[4]=e[4]*n,s[5]=e[5]*n,s[6]=e[6]*n,s[7]=0,s[8]=e[8]*r,s[9]=e[9]*r,s[10]=e[10]*r,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){const s=this.elements,e=t.x,i=t.y,n=t.z,r=Math.cos(e),o=Math.sin(e),a=Math.cos(i),c=Math.sin(i),h=Math.cos(n),l=Math.sin(n);if(t.order==="XYZ"){const u=r*h,f=r*l,m=o*h,y=o*l;s[0]=a*h,s[4]=-a*l,s[8]=c,s[1]=f+m*c,s[5]=u-y*c,s[9]=-o*a,s[2]=y-u*c,s[6]=m+f*c,s[10]=r*a}else if(t.order==="YXZ"){const u=a*h,f=a*l,m=c*h,y=c*l;s[0]=u+y*o,s[4]=m*o-f,s[8]=r*c,s[1]=r*l,s[5]=r*h,s[9]=-o,s[2]=f*o-m,s[6]=y+u*o,s[10]=r*a}else if(t.order==="ZXY"){const u=a*h,f=a*l,m=c*h,y=c*l;s[0]=u-y*o,s[4]=-r*l,s[8]=m+f*o,s[1]=f+m*o,s[5]=r*h,s[9]=y-u*o,s[2]=-r*c,s[6]=o,s[10]=r*a}else if(t.order==="ZYX"){const u=r*h,f=r*l,m=o*h,y=o*l;s[0]=a*h,s[4]=m*c-f,s[8]=u*c+y,s[1]=a*l,s[5]=y*c+u,s[9]=f*c-m,s[2]=-c,s[6]=o*a,s[10]=r*a}else if(t.order==="YZX"){const u=r*a,f=r*c,m=o*a,y=o*c;s[0]=a*h,s[4]=y-u*l,s[8]=m*l+f,s[1]=l,s[5]=r*h,s[9]=-o*h,s[2]=-c*h,s[6]=f*l+m,s[10]=u-y*l}else if(t.order==="XZY"){const u=r*a,f=r*c,m=o*a,y=o*c;s[0]=a*h,s[4]=-l,s[8]=c*h,s[1]=u*l+y,s[5]=r*h,s[9]=f*l-m,s[2]=m*l-f,s[6]=o*h,s[10]=y*l+u}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ae,t,Se)}lookAt(t,s,e){const i=this.elements;return X.subVectors(t,s),X.lengthSq()===0&&(X.z=1),X.normalize(),ft.crossVectors(e,X),ft.lengthSq()===0&&(Math.abs(e.z)===1?X.x+=1e-4:X.z+=1e-4,X.normalize(),ft.crossVectors(e,X)),ft.normalize(),es.crossVectors(X,ft),i[0]=ft.x,i[4]=es.x,i[8]=X.x,i[1]=ft.y,i[5]=es.y,i[9]=X.y,i[2]=ft.z,i[6]=es.z,i[10]=X.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const e=t.elements,i=s.elements,n=this.elements,r=e[0],o=e[4],a=e[8],c=e[12],h=e[1],l=e[5],u=e[9],f=e[13],m=e[2],y=e[6],x=e[10],p=e[14],b=e[3],g=e[7],_=e[11],w=e[15],z=i[0],A=i[4],S=i[8],T=i[12],B=i[1],P=i[5],C=i[9],E=i[13],F=i[2],I=i[6],k=i[10],R=i[14],N=i[3],W=i[7],gs=i[11],bs=i[15];return n[0]=r*z+o*B+a*F+c*N,n[4]=r*A+o*P+a*I+c*W,n[8]=r*S+o*C+a*k+c*gs,n[12]=r*T+o*E+a*R+c*bs,n[1]=h*z+l*B+u*F+f*N,n[5]=h*A+l*P+u*I+f*W,n[9]=h*S+l*C+u*k+f*gs,n[13]=h*T+l*E+u*R+f*bs,n[2]=m*z+y*B+x*F+p*N,n[6]=m*A+y*P+x*I+p*W,n[10]=m*S+y*C+x*k+p*gs,n[14]=m*T+y*E+x*R+p*bs,n[3]=b*z+g*B+_*F+w*N,n[7]=b*A+g*P+_*I+w*W,n[11]=b*S+g*C+_*k+w*gs,n[15]=b*T+g*E+_*R+w*bs,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],e=t[4],i=t[8],n=t[12],r=t[1],o=t[5],a=t[9],c=t[13],h=t[2],l=t[6],u=t[10],f=t[14],m=t[3],y=t[7],x=t[11],p=t[15];return m*(+n*a*l-i*c*l-n*o*u+e*c*u+i*o*f-e*a*f)+y*(+s*a*f-s*c*u+n*r*u-i*r*f+i*c*h-n*a*h)+x*(+s*c*l-s*o*f-n*r*l+e*r*f+n*o*h-e*c*h)+p*(-i*o*h-s*a*l+s*o*u+i*r*l-e*r*u+e*a*h)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,e){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=s,i[14]=e),this}invert(){const t=this.elements,s=t[0],e=t[1],i=t[2],n=t[3],r=t[4],o=t[5],a=t[6],c=t[7],h=t[8],l=t[9],u=t[10],f=t[11],m=t[12],y=t[13],x=t[14],p=t[15],b=l*x*c-y*u*c+y*a*f-o*x*f-l*a*p+o*u*p,g=m*u*c-h*x*c-m*a*f+r*x*f+h*a*p-r*u*p,_=h*y*c-m*l*c+m*o*f-r*y*f-h*o*p+r*l*p,w=m*l*a-h*y*a-m*o*u+r*y*u+h*o*x-r*l*x,z=s*b+e*g+i*_+n*w;if(z===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/z;return t[0]=b*A,t[1]=(y*u*n-l*x*n-y*i*f+e*x*f+l*i*p-e*u*p)*A,t[2]=(o*x*n-y*a*n+y*i*c-e*x*c-o*i*p+e*a*p)*A,t[3]=(l*a*n-o*u*n-l*i*c+e*u*c+o*i*f-e*a*f)*A,t[4]=g*A,t[5]=(h*x*n-m*u*n+m*i*f-s*x*f-h*i*p+s*u*p)*A,t[6]=(m*a*n-r*x*n-m*i*c+s*x*c+r*i*p-s*a*p)*A,t[7]=(r*u*n-h*a*n+h*i*c-s*u*c-r*i*f+s*a*f)*A,t[8]=_*A,t[9]=(m*l*n-h*y*n-m*e*f+s*y*f+h*e*p-s*l*p)*A,t[10]=(r*y*n-m*o*n+m*e*c-s*y*c-r*e*p+s*o*p)*A,t[11]=(h*o*n-r*l*n-h*e*c+s*l*c+r*e*f-s*o*f)*A,t[12]=w*A,t[13]=(h*y*i-m*l*i+m*e*u-s*y*u-h*e*x+s*l*x)*A,t[14]=(m*o*i-r*y*i-m*e*a+s*y*a+r*e*x-s*o*x)*A,t[15]=(r*l*i-h*o*i+h*e*a-s*l*a-r*e*u+s*o*u)*A,this}scale(t){const s=this.elements,e=t.x,i=t.y,n=t.z;return s[0]*=e,s[4]*=i,s[8]*=n,s[1]*=e,s[5]*=i,s[9]*=n,s[2]*=e,s[6]*=i,s[10]*=n,s[3]*=e,s[7]*=i,s[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,e,i))}makeTranslation(t,s,e){return this.set(1,0,0,t,0,1,0,s,0,0,1,e,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,s,-e,0,0,e,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,0,e,0,0,1,0,0,-e,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),e=Math.sin(t);return this.set(s,-e,0,0,e,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const e=Math.cos(s),i=Math.sin(s),n=1-e,r=t.x,o=t.y,a=t.z,c=n*r,h=n*o;return this.set(c*r+e,c*o-i*a,c*a+i*o,0,c*o+i*a,h*o+e,h*a-i*r,0,c*a-i*o,h*a+i*r,n*a*a+e,0,0,0,0,1),this}makeScale(t,s,e){return this.set(t,0,0,0,0,s,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,s,e,i,n,r){return this.set(1,e,n,0,t,1,r,0,s,i,1,0,0,0,0,1),this}compose(t,s,e){const i=this.elements,n=s._x,r=s._y,o=s._z,a=s._w,c=n+n,h=r+r,l=o+o,u=n*c,f=n*h,m=n*l,y=r*h,x=r*l,p=o*l,b=a*c,g=a*h,_=a*l,w=e.x,z=e.y,A=e.z;return i[0]=(1-(y+p))*w,i[1]=(f+_)*w,i[2]=(m-g)*w,i[3]=0,i[4]=(f-_)*z,i[5]=(1-(u+p))*z,i[6]=(x+b)*z,i[7]=0,i[8]=(m+g)*A,i[9]=(x-b)*A,i[10]=(1-(u+y))*A,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,s,e){const i=this.elements;let n=Tt.set(i[0],i[1],i[2]).length();const r=Tt.set(i[4],i[5],i[6]).length(),o=Tt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],H.copy(this);const c=1/n,h=1/r,l=1/o;return H.elements[0]*=c,H.elements[1]*=c,H.elements[2]*=c,H.elements[4]*=h,H.elements[5]*=h,H.elements[6]*=h,H.elements[8]*=l,H.elements[9]*=l,H.elements[10]*=l,s.setFromRotationMatrix(H),e.x=n,e.y=r,e.z=o,this}makePerspective(t,s,e,i,n,r){const o=this.elements,a=2*n/(s-t),c=2*n/(e-i),h=(s+t)/(s-t),l=(e+i)/(e-i),u=-(r+n)/(r-n),f=-2*r*n/(r-n);return o[0]=a,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,s,e,i,n,r){const o=this.elements,a=1/(s-t),c=1/(e-i),h=1/(r-n),l=(s+t)*a,u=(e+i)*c,f=(r+n)*h;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const s=this.elements,e=t.elements;for(let i=0;i<16;i++)if(s[i]!==e[i])return!1;return!0}fromArray(t,s=0){for(let e=0;e<16;e++)this.elements[e]=t[e+s];return this}toArray(t=[],s=0){const e=this.elements;return t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3],t[s+4]=e[4],t[s+5]=e[5],t[s+6]=e[6],t[s+7]=e[7],t[s+8]=e[8],t[s+9]=e[9],t[s+10]=e[10],t[s+11]=e[11],t[s+12]=e[12],t[s+13]=e[13],t[s+14]=e[14],t[s+15]=e[15],t}}const Tt=new M,H=new D,Ae=new M(0,0,0),Se=new M(1,1,1),ft=new M,es=new M,X=new M,Gs=new D,$s=new vt;class Lt{constructor(t=0,s=0,e=0,i=Lt.DefaultOrder){this.isEuler=!0,this._x=t,this._y=s,this._z=e,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,e,i=this._order){return this._x=t,this._y=s,this._z=e,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,e=!0){const i=t.elements,n=i[0],r=i[4],o=i[8],a=i[1],c=i[5],h=i[9],l=i[2],u=i[6],f=i[10];switch(s){case"XYZ":this._y=Math.asin(tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-tt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(a,c)):(this._y=Math.atan2(-l,n),this._z=0);break;case"ZXY":this._x=Math.asin(tt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-l,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin(tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-l,n)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-tt(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+s)}return this._order=s,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,s,e){return Gs.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Gs,s,e)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return $s.setFromEuler(this),this.setFromQuaternion($s,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Lt.DefaultOrder="XYZ",Lt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Be{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Te=0;const Js=new M,Pt=new vt,et=new D,is=new M,Xt=new M,Pe=new M,Ce=new vt,Qs=new M(1,0,0),Ks=new M(0,1,0),te=new M(0,0,1),Ee={type:"added"},se={type:"removed"};class dt extends ws{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Te++}),this.uuid=Jt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dt.DefaultUp.clone();const t=new M,s=new Lt,e=new vt,i=new M(1,1,1);function n(){e.setFromEuler(s,!1)}function r(){s.setFromQuaternion(e,void 0,!1)}s._onChange(n),e._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:s},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new D},normalMatrix:{value:new _t}}),this.matrix=new D,this.matrixWorld=new D,this.matrixAutoUpdate=dt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=dt.DefaultMatrixWorldAutoUpdate,this.layers=new Be,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return Pt.setFromAxisAngle(t,s),this.quaternion.multiply(Pt),this}rotateOnWorldAxis(t,s){return Pt.setFromAxisAngle(t,s),this.quaternion.premultiply(Pt),this}rotateX(t){return this.rotateOnAxis(Qs,t)}rotateY(t){return this.rotateOnAxis(Ks,t)}rotateZ(t){return this.rotateOnAxis(te,t)}translateOnAxis(t,s){return Js.copy(t).applyQuaternion(this.quaternion),this.position.add(Js.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(Qs,t)}translateY(t){return this.translateOnAxis(Ks,t)}translateZ(t){return this.translateOnAxis(te,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(et.copy(this.matrixWorld).invert())}lookAt(t,s,e){t.isVector3?is.copy(t):is.set(t,s,e);const i=this.parent;this.updateWorldMatrix(!0,!1),Xt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?et.lookAt(Xt,is,this.up):et.lookAt(is,Xt,this.up),this.quaternion.setFromRotationMatrix(et),i&&(et.extractRotation(i.matrixWorld),Pt.setFromRotationMatrix(et),this.quaternion.premultiply(Pt.invert()))}add(t){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.add(arguments[s]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Ee)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const s=this.children.indexOf(t);return s!==-1&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(se)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const s=this.children[t];s.parent=null,s.dispatchEvent(se)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),et.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),et.multiply(t.parent.matrixWorld)),t.applyMatrix4(et),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let e=0,i=this.children.length;e<i;e++){const r=this.children[e].getObjectByProperty(t,s);if(r!==void 0)return r}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,t,Pe),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Xt,Ce,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const s=this.children;for(let e=0,i=s.length;e<i;e++)s[e].traverseVisible(t)}traverseAncestors(t){const s=this.parent;s!==null&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let e=0,i=s.length;e<i;e++){const n=s[e];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,s){const e=this.parent;if(t===!0&&e!==null&&e.matrixWorldAutoUpdate===!0&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),s===!0){const i=this.children;for(let n=0,r=i.length;n<r;n++){const o=i[n];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(t){const s=t===void 0||typeof t=="string",e={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function n(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let c=0,h=a.length;c<h;c++){const l=a[c];n(t.shapes,l)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,c=this.material.length;a<c;a++)o.push(n(t.materials,this.material[a]));i.material=o}else i.material=n(t.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(n(t.animations,a))}}if(s){const o=r(t.geometries),a=r(t.materials),c=r(t.textures),h=r(t.images),l=r(t.shapes),u=r(t.skeletons),f=r(t.animations),m=r(t.nodes);o.length>0&&(e.geometries=o),a.length>0&&(e.materials=a),c.length>0&&(e.textures=c),h.length>0&&(e.images=h),l.length>0&&(e.shapes=l),u.length>0&&(e.skeletons=u),f.length>0&&(e.animations=f),m.length>0&&(e.nodes=m)}return e.object=i,e;function r(o){const a=[];for(const c in o){const h=o[c];delete h.metadata,a.push(h)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),s===!0)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}dt.DefaultUp=new M(0,1,0),dt.DefaultMatrixAutoUpdate=!0,dt.DefaultMatrixWorldAutoUpdate=!0;const j=new M,it=new M,Ts=new M,nt=new M,Ct=new M,Et=new M,ee=new M,Ps=new M,Cs=new M,Es=new M;class rt{constructor(t=new M,s=new M,e=new M){this.a=t,this.b=s,this.c=e}static getNormal(t,s,e,i){i.subVectors(e,s),j.subVectors(t,s),i.cross(j);const n=i.lengthSq();return n>0?i.multiplyScalar(1/Math.sqrt(n)):i.set(0,0,0)}static getBarycoord(t,s,e,i,n){j.subVectors(i,s),it.subVectors(e,s),Ts.subVectors(t,s);const r=j.dot(j),o=j.dot(it),a=j.dot(Ts),c=it.dot(it),h=it.dot(Ts),l=r*c-o*o;if(l===0)return n.set(-2,-1,-1);const u=1/l,f=(c*a-o*h)*u,m=(r*h-o*a)*u;return n.set(1-f-m,m,f)}static containsPoint(t,s,e,i){return this.getBarycoord(t,s,e,i,nt),nt.x>=0&&nt.y>=0&&nt.x+nt.y<=1}static getUV(t,s,e,i,n,r,o,a){return this.getBarycoord(t,s,e,i,nt),a.set(0,0),a.addScaledVector(n,nt.x),a.addScaledVector(r,nt.y),a.addScaledVector(o,nt.z),a}static isFrontFacing(t,s,e,i){return j.subVectors(e,s),it.subVectors(t,s),j.cross(it).dot(i)<0}set(t,s,e){return this.a.copy(t),this.b.copy(s),this.c.copy(e),this}setFromPointsAndIndices(t,s,e,i){return this.a.copy(t[s]),this.b.copy(t[e]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,s,e,i){return this.a.fromBufferAttribute(t,s),this.b.fromBufferAttribute(t,e),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return j.subVectors(this.c,this.b),it.subVectors(this.a,this.b),j.cross(it).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return rt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,s){return rt.getBarycoord(t,this.a,this.b,this.c,s)}getUV(t,s,e,i,n){return rt.getUV(t,this.a,this.b,this.c,s,e,i,n)}containsPoint(t){return rt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return rt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,s){const e=this.a,i=this.b,n=this.c;let r,o;Ct.subVectors(i,e),Et.subVectors(n,e),Ps.subVectors(t,e);const a=Ct.dot(Ps),c=Et.dot(Ps);if(a<=0&&c<=0)return s.copy(e);Cs.subVectors(t,i);const h=Ct.dot(Cs),l=Et.dot(Cs);if(h>=0&&l<=h)return s.copy(i);const u=a*l-h*c;if(u<=0&&a>=0&&h<=0)return r=a/(a-h),s.copy(e).addScaledVector(Ct,r);Es.subVectors(t,n);const f=Ct.dot(Es),m=Et.dot(Es);if(m>=0&&f<=m)return s.copy(n);const y=f*c-a*m;if(y<=0&&c>=0&&m<=0)return o=c/(c-m),s.copy(e).addScaledVector(Et,o);const x=h*m-f*l;if(x<=0&&l-h>=0&&f-m>=0)return ee.subVectors(n,i),o=(l-h)/(l-h+(f-m)),s.copy(i).addScaledVector(ee,o);const p=1/(x+y+u);return r=y*p,o=u*p,s.copy(e).addScaledVector(Ct,r).addScaledVector(Et,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const U=new M,ns=new v;class G{constructor(t,s,e){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=s,this.count=t!==void 0?t.length/s:0,this.normalized=e===!0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,e){t*=this.itemSize,e*=s.itemSize;for(let i=0,n=this.itemSize;i<n;i++)this.array[t+i]=s.array[e+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let s=0,e=this.count;s<e;s++)ns.fromBufferAttribute(this,s),ns.applyMatrix3(t),this.setXY(s,ns.x,ns.y);else if(this.itemSize===3)for(let s=0,e=this.count;s<e;s++)U.fromBufferAttribute(this,s),U.applyMatrix3(t),this.setXYZ(s,U.x,U.y,U.z);return this}applyMatrix4(t){for(let s=0,e=this.count;s<e;s++)U.fromBufferAttribute(this,s),U.applyMatrix4(t),this.setXYZ(s,U.x,U.y,U.z);return this}applyNormalMatrix(t){for(let s=0,e=this.count;s<e;s++)U.fromBufferAttribute(this,s),U.applyNormalMatrix(t),this.setXYZ(s,U.x,U.y,U.z);return this}transformDirection(t){for(let s=0,e=this.count;s<e;s++)U.fromBufferAttribute(this,s),U.transformDirection(t),this.setXYZ(s,U.x,U.y,U.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){let s=this.array[t*this.itemSize];return this.normalized&&(s=Qt(s,this.array)),s}setX(t,s){return this.normalized&&(s=L(s,this.array)),this.array[t*this.itemSize]=s,this}getY(t){let s=this.array[t*this.itemSize+1];return this.normalized&&(s=Qt(s,this.array)),s}setY(t,s){return this.normalized&&(s=L(s,this.array)),this.array[t*this.itemSize+1]=s,this}getZ(t){let s=this.array[t*this.itemSize+2];return this.normalized&&(s=Qt(s,this.array)),s}setZ(t,s){return this.normalized&&(s=L(s,this.array)),this.array[t*this.itemSize+2]=s,this}getW(t){let s=this.array[t*this.itemSize+3];return this.normalized&&(s=Qt(s,this.array)),s}setW(t,s){return this.normalized&&(s=L(s,this.array)),this.array[t*this.itemSize+3]=s,this}setXY(t,s,e){return t*=this.itemSize,this.normalized&&(s=L(s,this.array),e=L(e,this.array)),this.array[t+0]=s,this.array[t+1]=e,this}setXYZ(t,s,e,i){return t*=this.itemSize,this.normalized&&(s=L(s,this.array),e=L(e,this.array),i=L(i,this.array)),this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this}setXYZW(t,s,e,i,n){return t*=this.itemSize,this.normalized&&(s=L(s,this.array),e=L(e,this.array),i=L(i,this.array),n=L(n,this.array)),this.array[t+0]=s,this.array[t+1]=e,this.array[t+2]=i,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Fe extends G{constructor(t,s,e){super(new Uint16Array(t),s,e)}}class Ie extends G{constructor(t,s,e){super(new Uint32Array(t),s,e)}}class ke extends G{constructor(t,s,e){super(new Float32Array(t),s,e)}}let Re=0;const Y=new D,Fs=new dt,Ft=new M,O=new Z,Ot=new Z,V=new M;class Is extends ws{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Re++}),this.uuid=Jt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(be(t)?Ie:Fe)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,s){return this.attributes[t]=s,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,s,e=0){this.groups.push({start:t,count:s,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,s){this.drawRange.start=t,this.drawRange.count=s}applyMatrix4(t){const s=this.attributes.position;s!==void 0&&(s.applyMatrix4(t),s.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new _t().getNormalMatrix(t);e.applyNormalMatrix(n),e.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Y.makeRotationFromQuaternion(t),this.applyMatrix4(Y),this}rotateX(t){return Y.makeRotationX(t),this.applyMatrix4(Y),this}rotateY(t){return Y.makeRotationY(t),this.applyMatrix4(Y),this}rotateZ(t){return Y.makeRotationZ(t),this.applyMatrix4(Y),this}translate(t,s,e){return Y.makeTranslation(t,s,e),this.applyMatrix4(Y),this}scale(t,s,e){return Y.makeScale(t,s,e),this.applyMatrix4(Y),this}lookAt(t){return Fs.lookAt(t),Fs.updateMatrix(),this.applyMatrix4(Fs.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ft).negate(),this.translate(Ft.x,Ft.y,Ft.z),this}setFromPoints(t){const s=[];for(let e=0,i=t.length;e<i;e++){const n=t[e];s.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ke(s,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Z);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),s)for(let e=0,i=s.length;e<i;e++){const n=s[e];O.setFromBufferAttribute(n),this.morphTargetsRelative?(V.addVectors(this.boundingBox.min,O.min),this.boundingBox.expandByPoint(V),V.addVectors(this.boundingBox.max,O.max),this.boundingBox.expandByPoint(V)):(this.boundingBox.expandByPoint(O.min),this.boundingBox.expandByPoint(O.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new js);const t=this.attributes.position,s=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new M,1/0);return}if(t){const e=this.boundingSphere.center;if(O.setFromBufferAttribute(t),s)for(let n=0,r=s.length;n<r;n++){const o=s[n];Ot.setFromBufferAttribute(o),this.morphTargetsRelative?(V.addVectors(O.min,Ot.min),O.expandByPoint(V),V.addVectors(O.max,Ot.max),O.expandByPoint(V)):(O.expandByPoint(Ot.min),O.expandByPoint(Ot.max))}O.getCenter(e);let i=0;for(let n=0,r=t.count;n<r;n++)V.fromBufferAttribute(t,n),i=Math.max(i,e.distanceToSquared(V));if(s)for(let n=0,r=s.length;n<r;n++){const o=s[n],a=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)V.fromBufferAttribute(o,c),a&&(Ft.fromBufferAttribute(t,c),V.add(Ft)),i=Math.max(i,e.distanceToSquared(V))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,s=this.attributes;if(t===null||s.position===void 0||s.normal===void 0||s.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.array,i=s.position.array,n=s.normal.array,r=s.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new G(new Float32Array(4*o),4));const a=this.getAttribute("tangent").array,c=[],h=[];for(let B=0;B<o;B++)c[B]=new M,h[B]=new M;const l=new M,u=new M,f=new M,m=new v,y=new v,x=new v,p=new M,b=new M;function g(B,P,C){l.fromArray(i,B*3),u.fromArray(i,P*3),f.fromArray(i,C*3),m.fromArray(r,B*2),y.fromArray(r,P*2),x.fromArray(r,C*2),u.sub(l),f.sub(l),y.sub(m),x.sub(m);const E=1/(y.x*x.y-x.x*y.y);isFinite(E)&&(p.copy(u).multiplyScalar(x.y).addScaledVector(f,-y.y).multiplyScalar(E),b.copy(f).multiplyScalar(y.x).addScaledVector(u,-x.x).multiplyScalar(E),c[B].add(p),c[P].add(p),c[C].add(p),h[B].add(b),h[P].add(b),h[C].add(b))}let _=this.groups;_.length===0&&(_=[{start:0,count:e.length}]);for(let B=0,P=_.length;B<P;++B){const C=_[B],E=C.start,F=C.count;for(let I=E,k=E+F;I<k;I+=3)g(e[I+0],e[I+1],e[I+2])}const w=new M,z=new M,A=new M,S=new M;function T(B){A.fromArray(n,B*3),S.copy(A);const P=c[B];w.copy(P),w.sub(A.multiplyScalar(A.dot(P))).normalize(),z.crossVectors(S,P);const E=z.dot(h[B])<0?-1:1;a[B*4]=w.x,a[B*4+1]=w.y,a[B*4+2]=w.z,a[B*4+3]=E}for(let B=0,P=_.length;B<P;++B){const C=_[B],E=C.start,F=C.count;for(let I=E,k=E+F;I<k;I+=3)T(e[I+0]),T(e[I+1]),T(e[I+2])}}computeVertexNormals(){const t=this.index,s=this.getAttribute("position");if(s!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new G(new Float32Array(s.count*3),3),this.setAttribute("normal",e);else for(let u=0,f=e.count;u<f;u++)e.setXYZ(u,0,0,0);const i=new M,n=new M,r=new M,o=new M,a=new M,c=new M,h=new M,l=new M;if(t)for(let u=0,f=t.count;u<f;u+=3){const m=t.getX(u+0),y=t.getX(u+1),x=t.getX(u+2);i.fromBufferAttribute(s,m),n.fromBufferAttribute(s,y),r.fromBufferAttribute(s,x),h.subVectors(r,n),l.subVectors(i,n),h.cross(l),o.fromBufferAttribute(e,m),a.fromBufferAttribute(e,y),c.fromBufferAttribute(e,x),o.add(h),a.add(h),c.add(h),e.setXYZ(m,o.x,o.y,o.z),e.setXYZ(y,a.x,a.y,a.z),e.setXYZ(x,c.x,c.y,c.z)}else for(let u=0,f=s.count;u<f;u+=3)i.fromBufferAttribute(s,u+0),n.fromBufferAttribute(s,u+1),r.fromBufferAttribute(s,u+2),h.subVectors(r,n),l.subVectors(i,n),h.cross(l),e.setXYZ(u+0,h.x,h.y,h.z),e.setXYZ(u+1,h.x,h.y,h.z),e.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let s=0,e=t.count;s<e;s++)V.fromBufferAttribute(t,s),V.normalize(),t.setXYZ(s,V.x,V.y,V.z)}toNonIndexed(){function t(o,a){const c=o.array,h=o.itemSize,l=o.normalized,u=new c.constructor(a.length*h);let f=0,m=0;for(let y=0,x=a.length;y<x;y++){o.isInterleavedBufferAttribute?f=a[y]*o.data.stride+o.offset:f=a[y]*h;for(let p=0;p<h;p++)u[m++]=c[f++]}return new G(u,h,l)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const s=new Is,e=this.index.array,i=this.attributes;for(const o in i){const a=i[o],c=t(a,e);s.setAttribute(o,c)}const n=this.morphAttributes;for(const o in n){const a=[],c=n[o];for(let h=0,l=c.length;h<l;h++){const u=c[h],f=t(u,e);a.push(f)}s.morphAttributes[o]=a}s.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const c=r[o];s.addGroup(c.start,c.count,c.materialIndex)}return s}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(t[c]=a[c]);return t}t.data={attributes:{}};const s=this.index;s!==null&&(t.data.index={type:s.array.constructor.name,array:Array.prototype.slice.call(s.array)});const e=this.attributes;for(const a in e){const c=e[a];t.data.attributes[a]=c.toJSON(t.data)}const i={};let n=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],h=[];for(let l=0,u=c.length;l<u;l++){const f=c[l];h.push(f.toJSON(t.data))}h.length>0&&(i[a]=h,n=!0)}n&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const s={};this.name=t.name;const e=t.index;e!==null&&this.setIndex(e.clone(s));const i=t.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(s))}const n=t.morphAttributes;for(const c in n){const h=[],l=n[c];for(let u=0,f=l.length;u<f;u++)h.push(l[u].clone(s));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let c=0,h=r.length;c<h;c++){const l=r[c];this.addGroup(l.start,l.count,l.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const ks=new M,Ue=new M,Ve=new _t;class ie{constructor(t=new M(1,0,0),s=0){this.isPlane=!0,this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,e,i){return this.normal.set(t,s,e),this.constant=i,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,e){const i=ks.subVectors(e,s).cross(Ue.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,s){const e=t.delta(ks),i=this.normal.dot(e);if(i===0)return this.distanceToPoint(t.start)===0?s.copy(t.start):null;const n=-(t.start.dot(this.normal)+this.constant)/i;return n<0||n>1?null:s.copy(e).multiplyScalar(n).add(t.start)}intersectsLine(t){const s=this.distanceToPoint(t.start),e=this.distanceToPoint(t.end);return s<0&&e>0||e<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const e=s||Ve.getNormalMatrix(t),i=this.coplanarPoint(ks).applyMatrix4(t),n=this.normal.applyMatrix3(e).normalize();return this.constant=-i.dot(n),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ne=new M,rs=new M;class ot{constructor(t=new M,s=new M){this.start=t,this.end=s}set(t,s){return this.start.copy(t),this.end.copy(s),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,s){return this.delta(s).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,s){ne.subVectors(t,this.start),rs.subVectors(this.end,this.start);const e=rs.dot(rs);let n=rs.dot(ne)/e;return s&&(n=tt(n,0,1)),n}closestPointToPoint(t,s,e){const i=this.closestPointToPointParameter(t,s);return this.delta(e).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ws}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ws);const re=0,qe=1,Ne=2,oe=2,Rs=1.25,ae=1,os=6*4+4+4,Us=65535,ve=Math.pow(2,-24);class as{constructor(){}}function $(d,t,s){return s.min.x=t[d],s.min.y=t[d+1],s.min.z=t[d+2],s.max.x=t[d+3],s.max.y=t[d+4],s.max.z=t[d+5],s}function he(d){let t=-1,s=-1/0;for(let e=0;e<3;e++){const i=d[e+3]-d[e];i>s&&(s=i,t=e)}return t}function ce(d,t){t.set(d)}function le(d,t,s){let e,i;for(let n=0;n<3;n++){const r=n+3;e=d[n],i=t[n],s[n]=e<i?e:i,e=d[r],i=t[r],s[r]=e>i?e:i}}function hs(d,t,s){for(let e=0;e<3;e++){const i=t[d+2*e],n=t[d+2*e+1],r=i-n,o=i+n;r<s[e]&&(s[e]=r),o>s[e+3]&&(s[e+3]=o)}}function Wt(d){const t=d[3]-d[0],s=d[4]-d[1],e=d[5]-d[2];return 2*(t*s+s*e+e*t)}function De(d,t){if(!d.index){const s=d.attributes.position.count,e=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;let i;s>65535?i=new Uint32Array(new e(4*s)):i=new Uint16Array(new e(2*s)),d.setIndex(new G(i,1));for(let n=0;n<s;n++)i[n]=n}}function Le(d){if(!d.groups||!d.groups.length)return[{offset:0,count:d.index.count/3}];const t=[],s=new Set;for(const i of d.groups)s.add(i.start),s.add(i.start+i.count);const e=Array.from(s.values()).sort((i,n)=>i-n);for(let i=0;i<e.length-1;i++){const n=e[i],r=e[i+1];t.push({offset:n/3,count:(r-n)/3})}return t}function Vs(d,t,s,e,i=null){let n=1/0,r=1/0,o=1/0,a=-1/0,c=-1/0,h=-1/0,l=1/0,u=1/0,f=1/0,m=-1/0,y=-1/0,x=-1/0;const p=i!==null;for(let b=t*6,g=(t+s)*6;b<g;b+=6){const _=d[b+0],w=d[b+1],z=_-w,A=_+w;z<n&&(n=z),A>a&&(a=A),p&&_<l&&(l=_),p&&_>m&&(m=_);const S=d[b+2],T=d[b+3],B=S-T,P=S+T;B<r&&(r=B),P>c&&(c=P),p&&S<u&&(u=S),p&&S>y&&(y=S);const C=d[b+4],E=d[b+5],F=C-E,I=C+E;F<o&&(o=F),I>h&&(h=I),p&&C<f&&(f=C),p&&C>x&&(x=C)}e[0]=n,e[1]=r,e[2]=o,e[3]=a,e[4]=c,e[5]=h,p&&(i[0]=l,i[1]=u,i[2]=f,i[3]=m,i[4]=y,i[5]=x)}function Xe(d,t,s,e){let i=1/0,n=1/0,r=1/0,o=-1/0,a=-1/0,c=-1/0;for(let h=t*6,l=(t+s)*6;h<l;h+=6){const u=d[h+0];u<i&&(i=u),u>o&&(o=u);const f=d[h+2];f<n&&(n=f),f>a&&(a=f);const m=d[h+4];m<r&&(r=m),m>c&&(c=m)}e[0]=i,e[1]=n,e[2]=r,e[3]=o,e[4]=a,e[5]=c}function Oe(d,t,s,e,i){let n=s,r=s+e-1;const o=i.pos,a=i.axis*2;for(;;){for(;n<=r&&t[n*6+a]<o;)n++;for(;n<=r&&t[r*6+a]>=o;)r--;if(n<r){for(let c=0;c<3;c++){let h=d[n*3+c];d[n*3+c]=d[r*3+c],d[r*3+c]=h;let l=t[n*6+c*2+0];t[n*6+c*2+0]=t[r*6+c*2+0],t[r*6+c*2+0]=l;let u=t[n*6+c*2+1];t[n*6+c*2+1]=t[r*6+c*2+1],t[r*6+c*2+1]=u}n++,r--}else return n}}const at=32,We=(d,t)=>d.candidate-t.candidate,mt=new Array(at).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),cs=new Float32Array(6);function Ye(d,t,s,e,i,n){let r=-1,o=0;if(n===re)r=he(t),r!==-1&&(o=(t[r]+t[r+3])/2);else if(n===qe)r=he(d),r!==-1&&(o=Ze(s,e,i,r));else if(n===Ne){const a=Wt(d);let c=Rs*i;const h=e*6,l=(e+i)*6;for(let u=0;u<3;u++){const f=t[u],x=(t[u+3]-f)/at;if(i<at/4){const p=[...mt];p.length=i;let b=0;for(let _=h;_<l;_+=6,b++){const w=p[b];w.candidate=s[_+2*u],w.count=0;const{bounds:z,leftCacheBounds:A,rightCacheBounds:S}=w;for(let T=0;T<3;T++)S[T]=1/0,S[T+3]=-1/0,A[T]=1/0,A[T+3]=-1/0,z[T]=1/0,z[T+3]=-1/0;hs(_,s,z)}p.sort(We);let g=i;for(let _=0;_<g;_++){const w=p[_];for(;_+1<g&&p[_+1].candidate===w.candidate;)p.splice(_+1,1),g--}for(let _=h;_<l;_+=6){const w=s[_+2*u];for(let z=0;z<g;z++){const A=p[z];w>=A.candidate?hs(_,s,A.rightCacheBounds):(hs(_,s,A.leftCacheBounds),A.count++)}}for(let _=0;_<g;_++){const w=p[_],z=w.count,A=i-w.count,S=w.leftCacheBounds,T=w.rightCacheBounds;let B=0;z!==0&&(B=Wt(S)/a);let P=0;A!==0&&(P=Wt(T)/a);const C=ae+Rs*(B*z+P*A);C<c&&(r=u,c=C,o=w.candidate)}}else{for(let g=0;g<at;g++){const _=mt[g];_.count=0,_.candidate=f+x+g*x;const w=_.bounds;for(let z=0;z<3;z++)w[z]=1/0,w[z+3]=-1/0}for(let g=h;g<l;g+=6){let z=~~((s[g+2*u]-f)/x);z>=at&&(z=at-1);const A=mt[z];A.count++,hs(g,s,A.bounds)}const p=mt[at-1];ce(p.bounds,p.rightCacheBounds);for(let g=at-2;g>=0;g--){const _=mt[g],w=mt[g+1];le(_.bounds,w.rightCacheBounds,_.rightCacheBounds)}let b=0;for(let g=0;g<at-1;g++){const _=mt[g],w=_.count,z=_.bounds,S=mt[g+1].rightCacheBounds;w!==0&&(b===0?ce(z,cs):le(z,cs,cs)),b+=w;let T=0,B=0;b!==0&&(T=Wt(cs)/a);const P=i-b;P!==0&&(B=Wt(S)/a);const C=ae+Rs*(T*b+B*P);C<c&&(r=u,c=C,o=_.candidate)}}}}else console.warn(`MeshBVH: Invalid build strategy value ${n} used.`);return{axis:r,pos:o}}function Ze(d,t,s,e){let i=0;for(let n=t,r=t+s;n<r;n++)i+=d[n*6+e*2];return i/s}function He(d,t){const s=d.attributes.position,e=d.index.array,i=e.length/3,n=new Float32Array(i*6),r=s.normalized,o=s.array,a=s.offset||0;let c=3;s.isInterleavedBufferAttribute&&(c=s.data.stride);const h=["getX","getY","getZ"];for(let l=0;l<i;l++){const u=l*3,f=l*6;let m,y,x;r?(m=e[u+0],y=e[u+1],x=e[u+2]):(m=e[u+0]*c+a,y=e[u+1]*c+a,x=e[u+2]*c+a);for(let p=0;p<3;p++){let b,g,_;r?(b=s[h[p]](m),g=s[h[p]](y),_=s[h[p]](x)):(b=o[m+p],g=o[y+p],_=o[x+p]);let w=b;g<w&&(w=g),_<w&&(w=_);let z=b;g>z&&(z=g),_>z&&(z=_);const A=(z-w)/2,S=p*2;n[f+S+0]=w+A,n[f+S+1]=A+(Math.abs(w)+A)*ve,w<t[p]&&(t[p]=w),z>t[p+3]&&(t[p+3]=z)}}return n}function je(d,t){function s(p){u&&u(p/f)}function e(p,b,g,_=null,w=0){if(!m&&w>=a&&(m=!0,c&&(console.warn(`MeshBVH: Max depth of ${a} reached when generating BVH. Consider increasing maxDepth.`),console.warn(d))),g<=h||w>=a)return s(b+g),p.offset=b,p.count=g,p;const z=Ye(p.boundingData,_,r,b,g,l);if(z.axis===-1)return s(b+g),p.offset=b,p.count=g,p;const A=Oe(o,r,b,g,z);if(A===b||A===b+g)s(b+g),p.offset=b,p.count=g;else{p.splitAxis=z.axis;const S=new as,T=b,B=A-b;p.left=S,S.boundingData=new Float32Array(6),Vs(r,T,B,S.boundingData,n),e(S,T,B,n,w+1);const P=new as,C=A,E=g-B;p.right=P,P.boundingData=new Float32Array(6),Vs(r,C,E,P.boundingData,n),e(P,C,E,n,w+1)}return p}De(d,t);const i=new Float32Array(6),n=new Float32Array(6),r=He(d,i),o=d.index.array,a=t.maxDepth,c=t.verbose,h=t.maxLeafTris,l=t.strategy,u=t.onProgress,f=d.index.count/3;let m=!1;const y=[],x=Le(d);if(x.length===1){const p=x[0],b=new as;b.boundingData=i,Xe(r,p.offset,p.count,n),e(b,p.offset,p.count,n),y.push(b)}else for(let p of x){const b=new as;b.boundingData=new Float32Array(6),Vs(r,p.offset,p.count,b.boundingData,n),e(b,p.offset,p.count,n),y.push(b)}return y}function Ge(d,t){const s=je(d,t);let e,i,n;const r=[],o=t.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer;for(let h=0;h<s.length;h++){const l=s[h];let u=a(l);const f=new o(os*u);e=new Float32Array(f),i=new Uint32Array(f),n=new Uint16Array(f),c(0,l),r.push(f)}return r;function a(h){return h.count?1:1+a(h.left)+a(h.right)}function c(h,l){const u=h/4,f=h/2,m=!!l.count,y=l.boundingData;for(let x=0;x<6;x++)e[u+x]=y[x];if(m){const x=l.offset,p=l.count;return i[u+6]=x,n[f+14]=p,n[f+15]=Us,h+os}else{const x=l.left,p=l.right,b=l.splitAxis;let g;if(g=c(h+os,x),g/4>Math.pow(2,32))throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return i[u+6]=g/4,g=c(g,p),i[u+7]=b,g}}}class ht{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,s){let e=1/0,i=-1/0;for(let n=0,r=t.length;n<r;n++){const a=t[n][s];e=a<e?a:e,i=a>i?a:i}this.min=e,this.max=i}setFromPoints(t,s){let e=1/0,i=-1/0;for(let n=0,r=s.length;n<r;n++){const o=s[n],a=t.dot(o);e=a<e?a:e,i=a>i?a:i}this.min=e,this.max=i}isSeparated(t){return this.min>t.max||t.min>this.max}}ht.prototype.setFromBox=function(){const d=new M;return function(s,e){const i=e.min,n=e.max;let r=1/0,o=-1/0;for(let a=0;a<=1;a++)for(let c=0;c<=1;c++)for(let h=0;h<=1;h++){d.x=i.x*a+n.x*(1-a),d.y=i.y*c+n.y*(1-c),d.z=i.z*h+n.z*(1-h);const l=s.dot(d);r=Math.min(l,r),o=Math.max(l,o)}this.min=r,this.max=o}}();const $e=function(){const d=new M,t=new M,s=new M;return function(i,n,r){const o=i.start,a=d,c=n.start,h=t;s.subVectors(o,c),d.subVectors(i.end,i.start),t.subVectors(n.end,n.start);const l=s.dot(h),u=h.dot(a),f=h.dot(h),m=s.dot(a),x=a.dot(a)*f-u*u;let p,b;x!==0?p=(l*u-m*f)/x:p=0,b=(l+p*u)/f,r.x=p,r.y=b}}(),qs=function(){const d=new v,t=new M,s=new M;return function(i,n,r,o){$e(i,n,d);let a=d.x,c=d.y;if(a>=0&&a<=1&&c>=0&&c<=1){i.at(a,r),n.at(c,o);return}else if(a>=0&&a<=1){c<0?n.at(0,o):n.at(1,o),i.closestPointToPoint(o,!0,r);return}else if(c>=0&&c<=1){a<0?i.at(0,r):i.at(1,r),n.closestPointToPoint(r,!0,o);return}else{let h;a<0?h=i.start:h=i.end;let l;c<0?l=n.start:l=n.end;const u=t,f=s;if(i.closestPointToPoint(l,!0,t),n.closestPointToPoint(h,!0,s),u.distanceToSquared(l)<=f.distanceToSquared(h)){r.copy(u),o.copy(l);return}else{r.copy(h),o.copy(f);return}}}}(),Je=function(){const d=new M,t=new M,s=new ie,e=new ot;return function(n,r){const{radius:o,center:a}=n,{a:c,b:h,c:l}=r;if(e.start=c,e.end=h,e.closestPointToPoint(a,!0,d).distanceTo(a)<=o||(e.start=c,e.end=l,e.closestPointToPoint(a,!0,d).distanceTo(a)<=o)||(e.start=h,e.end=l,e.closestPointToPoint(a,!0,d).distanceTo(a)<=o))return!0;const y=r.getPlane(s);if(Math.abs(y.distanceToPoint(a))<=o){const p=y.projectPoint(a,t);if(r.containsPoint(p))return!0}return!1}}(),Qe=1e-15;function It(d){return Math.abs(d)<Qe}class ct extends rt{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new M),this.satBounds=new Array(4).fill().map(()=>new ht),this.points=[this.a,this.b,this.c],this.sphere=new js,this.plane=new ie,this.needsUpdate=!0}intersectsSphere(t){return Je(t,this)}update(){const t=this.a,s=this.b,e=this.c,i=this.points,n=this.satAxes,r=this.satBounds,o=n[0],a=r[0];this.getNormal(o),a.setFromPoints(o,i);const c=n[1],h=r[1];c.subVectors(t,s),h.setFromPoints(c,i);const l=n[2],u=r[2];l.subVectors(s,e),u.setFromPoints(l,i);const f=n[3],m=r[3];f.subVectors(e,t),m.setFromPoints(f,i),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(o,t),this.needsUpdate=!1}}ct.prototype.closestPointToSegment=function(){const d=new M,t=new M,s=new ot;return function(i,n=null,r=null){const{start:o,end:a}=i,c=this.points;let h,l=1/0;for(let u=0;u<3;u++){const f=(u+1)%3;s.start.copy(c[u]),s.end.copy(c[f]),qs(s,i,d,t),h=d.distanceToSquared(t),h<l&&(l=h,n&&n.copy(d),r&&r.copy(t))}return this.closestPointToPoint(o,d),h=o.distanceToSquared(d),h<l&&(l=h,n&&n.copy(d),r&&r.copy(o)),this.closestPointToPoint(a,d),h=a.distanceToSquared(d),h<l&&(l=h,n&&n.copy(d),r&&r.copy(a)),Math.sqrt(l)}}(),ct.prototype.intersectsTriangle=function(){const d=new ct,t=new Array(3),s=new Array(3),e=new ht,i=new ht,n=new M,r=new M,o=new M,a=new M,c=new ot,h=new ot,l=new ot;return function(f,m=null,y=!1){this.needsUpdate&&this.update(),f.isExtendedTriangle?f.needsUpdate&&f.update():(d.copy(f),d.update(),f=d);const x=this.plane,p=f.plane;if(Math.abs(x.normal.dot(p.normal))>1-1e-10){const b=this.satBounds,g=this.satAxes;s[0]=f.a,s[1]=f.b,s[2]=f.c;for(let z=0;z<4;z++){const A=b[z],S=g[z];if(e.setFromPoints(S,s),A.isSeparated(e))return!1}const _=f.satBounds,w=f.satAxes;t[0]=this.a,t[1]=this.b,t[2]=this.c;for(let z=0;z<4;z++){const A=_[z],S=w[z];if(e.setFromPoints(S,t),A.isSeparated(e))return!1}for(let z=0;z<4;z++){const A=g[z];for(let S=0;S<4;S++){const T=w[S];if(n.crossVectors(A,T),e.setFromPoints(n,t),i.setFromPoints(n,s),e.isSeparated(i))return!1}}return m&&(y||console.warn("ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0."),m.start.set(0,0,0),m.end.set(0,0,0)),!0}else{const b=this.points;let g=!1,_=0;for(let F=0;F<3;F++){const I=b[F],k=b[(F+1)%3];c.start.copy(I),c.end.copy(k),c.delta(r);const R=g?h.start:h.end,N=It(p.distanceToPoint(I));if(It(p.normal.dot(r))&&N){h.copy(c),_=2;break}if((p.intersectLine(c,R)||N)&&!It(R.distanceTo(k))){if(_++,g)break;g=!0}}if(_===1&&f.containsPoint(h.end))return m&&(m.start.copy(h.end),m.end.copy(h.end)),!0;if(_!==2)return!1;const w=f.points;let z=!1,A=0;for(let F=0;F<3;F++){const I=w[F],k=w[(F+1)%3];c.start.copy(I),c.end.copy(k),c.delta(o);const R=z?l.start:l.end,N=It(x.distanceToPoint(I));if(It(x.normal.dot(o))&&N){l.copy(c),A=2;break}if((x.intersectLine(c,R)||N)&&!It(R.distanceTo(k))){if(A++,z)break;z=!0}}if(A===1&&this.containsPoint(l.end))return m&&(m.start.copy(l.end),m.end.copy(l.end)),!0;if(A!==2)return!1;if(h.delta(r),l.delta(o),r.dot(o)<0){let F=l.start;l.start=l.end,l.end=F}const S=h.start.dot(r),T=h.end.dot(r),B=l.start.dot(r),P=l.end.dot(r),C=T<B,E=S<P;return S!==P&&B!==T&&C===E?!1:(m&&(a.subVectors(h.start,l.start),a.dot(r)>0?m.start.copy(h.start):m.start.copy(l.start),a.subVectors(h.end,l.end),a.dot(r)<0?m.end.copy(h.end):m.end.copy(l.end)),!0)}}}(),ct.prototype.distanceToPoint=function(){const d=new M;return function(s){return this.closestPointToPoint(s,d),s.distanceTo(d)}}(),ct.prototype.distanceToTriangle=function(){const d=new M,t=new M,s=["a","b","c"],e=new ot,i=new ot;return function(r,o=null,a=null){const c=o||a?e:null;if(this.intersectsTriangle(r,c))return(o||a)&&(o&&c.getCenter(o),a&&c.getCenter(a)),0;let h=1/0;for(let l=0;l<3;l++){let u;const f=s[l],m=r[f];this.closestPointToPoint(m,d),u=m.distanceToSquared(d),u<h&&(h=u,o&&o.copy(d),a&&a.copy(m));const y=this[f];r.closestPointToPoint(y,d),u=y.distanceToSquared(d),u<h&&(h=u,o&&o.copy(y),a&&a.copy(d))}for(let l=0;l<3;l++){const u=s[l],f=s[(l+1)%3];e.set(this[u],this[f]);for(let m=0;m<3;m++){const y=s[m],x=s[(m+1)%3];i.set(r[y],r[x]),qs(e,i,d,t);const p=d.distanceToSquared(t);p<h&&(h=p,o&&o.copy(d),a&&a.copy(t))}}return Math.sqrt(h)}}();class J{constructor(t,s,e){this.isOrientedBox=!0,this.min=new M,this.max=new M,this.matrix=new D,this.invMatrix=new D,this.points=new Array(8).fill().map(()=>new M),this.satAxes=new Array(3).fill().map(()=>new M),this.satBounds=new Array(3).fill().map(()=>new ht),this.alignedSatBounds=new Array(3).fill().map(()=>new ht),this.needsUpdate=!1,t&&this.min.copy(t),s&&this.max.copy(s),e&&this.matrix.copy(e)}set(t,s,e){this.min.copy(t),this.max.copy(s),this.matrix.copy(e),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}J.prototype.update=function(){return function(){const t=this.matrix,s=this.min,e=this.max,i=this.points;for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)for(let l=0;l<=1;l++){const u=1*c|2*h|4*l,f=i[u];f.x=c?e.x:s.x,f.y=h?e.y:s.y,f.z=l?e.z:s.z,f.applyMatrix4(t)}const n=this.satBounds,r=this.satAxes,o=i[0];for(let c=0;c<3;c++){const h=r[c],l=n[c],u=1<<c,f=i[u];h.subVectors(o,f),l.setFromPoints(h,i)}const a=this.alignedSatBounds;a[0].setFromPointsField(i,"x"),a[1].setFromPointsField(i,"y"),a[2].setFromPointsField(i,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1}}(),J.prototype.intersectsBox=function(){const d=new ht;return function(s){this.needsUpdate&&this.update();const e=s.min,i=s.max,n=this.satBounds,r=this.satAxes,o=this.alignedSatBounds;if(d.min=e.x,d.max=i.x,o[0].isSeparated(d)||(d.min=e.y,d.max=i.y,o[1].isSeparated(d))||(d.min=e.z,d.max=i.z,o[2].isSeparated(d)))return!1;for(let a=0;a<3;a++){const c=r[a],h=n[a];if(d.setFromBox(c,s),h.isSeparated(d))return!1}return!0}}(),J.prototype.intersectsTriangle=function(){const d=new ct,t=new Array(3),s=new ht,e=new ht,i=new M;return function(r){this.needsUpdate&&this.update(),r.isExtendedTriangle?r.needsUpdate&&r.update():(d.copy(r),d.update(),r=d);const o=this.satBounds,a=this.satAxes;t[0]=r.a,t[1]=r.b,t[2]=r.c;for(let u=0;u<3;u++){const f=o[u],m=a[u];if(s.setFromPoints(m,t),f.isSeparated(s))return!1}const c=r.satBounds,h=r.satAxes,l=this.points;for(let u=0;u<3;u++){const f=c[u],m=h[u];if(s.setFromPoints(m,l),f.isSeparated(s))return!1}for(let u=0;u<3;u++){const f=a[u];for(let m=0;m<4;m++){const y=h[m];if(i.crossVectors(f,y),s.setFromPoints(i,t),e.setFromPoints(i,l),s.isSeparated(e))return!1}}return!0}}(),J.prototype.closestPointToPoint=function(){return function(t,s){return this.needsUpdate&&this.update(),s.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),s}}(),J.prototype.distanceToPoint=function(){const d=new M;return function(s){return this.closestPointToPoint(s,d),s.distanceTo(d)}}(),J.prototype.distanceToBox=function(){const d=["x","y","z"],t=new Array(12).fill().map(()=>new ot),s=new Array(12).fill().map(()=>new ot),e=new M,i=new M;return function(r,o=0,a=null,c=null){if(this.needsUpdate&&this.update(),this.intersectsBox(r))return(a||c)&&(r.getCenter(i),this.closestPointToPoint(i,e),r.closestPointToPoint(e,i),a&&a.copy(e),c&&c.copy(i)),0;const h=o*o,l=r.min,u=r.max,f=this.points;let m=1/0;for(let x=0;x<8;x++){const p=f[x];i.copy(p).clamp(l,u);const b=p.distanceToSquared(i);if(b<m&&(m=b,a&&a.copy(p),c&&c.copy(i),b<h))return Math.sqrt(b)}let y=0;for(let x=0;x<3;x++)for(let p=0;p<=1;p++)for(let b=0;b<=1;b++){const g=(x+1)%3,_=(x+2)%3,w=p<<g|b<<_,z=1<<x|p<<g|b<<_,A=f[w],S=f[z];t[y].set(A,S);const B=d[x],P=d[g],C=d[_],E=s[y],F=E.start,I=E.end;F[B]=l[B],F[P]=p?l[P]:u[P],F[C]=b?l[C]:u[P],I[B]=u[B],I[P]=p?l[P]:u[P],I[C]=b?l[C]:u[P],y++}for(let x=0;x<=1;x++)for(let p=0;p<=1;p++)for(let b=0;b<=1;b++){i.x=x?u.x:l.x,i.y=p?u.y:l.y,i.z=b?u.z:l.z,this.closestPointToPoint(i,e);const g=i.distanceToSquared(e);if(g<m&&(m=g,a&&a.copy(e),c&&c.copy(i),g<h))return Math.sqrt(g)}for(let x=0;x<12;x++){const p=t[x];for(let b=0;b<12;b++){const g=s[b];qs(p,g,e,i);const _=e.distanceToSquared(i);if(_<m&&(m=_,a&&a.copy(e),c&&c.copy(i),_<h))return Math.sqrt(_)}}return Math.sqrt(m)}}();const ls=new M,us=new M,fs=new M,ue=new v,fe=new v,de=new v,me=new M;function Ke(d,t,s,e,i,n){let r;return n===1?r=d.intersectTriangle(e,s,t,!0,i):r=d.intersectTriangle(t,s,e,n!==2,i),r===null?null:{distance:d.origin.distanceTo(i),point:i.clone()}}function ti(d,t,s,e,i,n,r){ls.fromBufferAttribute(t,e),us.fromBufferAttribute(t,i),fs.fromBufferAttribute(t,n);const o=Ke(d,ls,us,fs,me,r);if(o){s&&(ue.fromBufferAttribute(s,e),fe.fromBufferAttribute(s,i),de.fromBufferAttribute(s,n),o.uv=rt.getUV(me,ls,us,fs,ue,fe,de,new v));const a={a:e,b:i,c:n,normal:new M,materialIndex:0};rt.getNormal(ls,us,fs,a.normal),o.face=a,o.faceIndex=e}return o}function pe(d,t,s,e,i){const n=e*3,r=d.index.getX(n),o=d.index.getX(n+1),a=d.index.getX(n+2),c=ti(s,d.attributes.position,d.attributes.uv,r,o,a,t);return c?(c.faceIndex=e,i&&i.push(c),c):null}function si(d,t,s,e,i,n){for(let r=e,o=e+i;r<o;r++)pe(d,t,s,r,n)}function ei(d,t,s,e,i){let n=1/0,r=null;for(let o=e,a=e+i;o<a;o++){const c=pe(d,t,s,o);c&&c.distance<n&&(r=c,n=c.distance)}return r}function Q(d,t,s,e){const i=d.a,n=d.b,r=d.c;let o=t,a=t+1,c=t+2;s&&(o=s.getX(t),a=s.getX(t+1),c=s.getX(t+2)),i.x=e.getX(o),i.y=e.getY(o),i.z=e.getZ(o),n.x=e.getX(a),n.y=e.getY(a),n.z=e.getZ(a),r.x=e.getX(c),r.y=e.getY(c),r.z=e.getZ(c)}function ye(d,t,s,e,i,n,r){const o=s.index,a=s.attributes.position;for(let c=d,h=t+d;c<h;c++)if(Q(r,c*3,o,a),r.needsUpdate=!0,e(r,c,i,n))return!0;return!1}class xe{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return t.length===0?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}function pt(d,t){return t[d+15]===65535}function kt(d,t){return t[d+6]}function Yt(d,t){return t[d+14]}function Zt(d){return d+8}function Ht(d,t){return t[d+6]}function ii(d,t){return t[d+7]}function zi(d){return d}const Rt=new Z,ds=new M,ni=["x","y","z"];function Ns(d,t,s,e,i){let n=d*2,r=Ut,o=yt,a=xt;if(pt(n,o)){const h=kt(d,a),l=Yt(n,o);si(t,s,e,h,l,i)}else{const h=Zt(d);ms(h,r,e,ds)&&Ns(h,t,s,e,i);const l=Ht(d,a);ms(l,r,e,ds)&&Ns(l,t,s,e,i)}}function vs(d,t,s,e){let i=d*2,n=Ut,r=yt,o=xt;if(pt(i,r)){const c=kt(d,o),h=Yt(i,r);return ei(t,s,e,c,h)}else{const c=ii(d,o),h=ni[c],u=e.direction[h]>=0;let f,m;u?(f=Zt(d),m=Ht(d,o)):(f=Ht(d,o),m=Zt(d));const x=ms(f,n,e,ds)?vs(f,t,s,e):null;if(x){const g=x.point[h];if(u?g<=n[m+c]:g>=n[m+c+3])return x}const b=ms(m,n,e,ds)?vs(m,t,s,e):null;return x&&b?x.distance<=b.distance?x:b:x||b||null}}const ri=function(){let d,t;const s=[],e=new xe(()=>new Z);return function(...r){d=e.getPrimitive(),t=e.getPrimitive(),s.push(d,t);const o=i(...r);e.releasePrimitive(d),e.releasePrimitive(t),s.pop(),s.pop();const a=s.length;return a>0&&(t=s[a-1],d=s[a-2]),o};function i(n,r,o,a,c=null,h=0,l=0){function u(g){let _=g*2,w=yt,z=xt;for(;!pt(_,w);)g=Zt(g),_=g*2;return kt(g,z)}function f(g){let _=g*2,w=yt,z=xt;for(;!pt(_,w);)g=Ht(g,z),_=g*2;return kt(g,z)+Yt(_,w)}let m=n*2,y=Ut,x=yt,p=xt;if(pt(m,x)){const g=kt(n,p),_=Yt(m,x);return $(n,y,d),a(g,_,!1,l,h+n,d)}else{const g=Zt(n),_=Ht(n,p);let w=g,z=_,A,S,T,B;if(c&&(T=d,B=t,$(w,y,T),$(z,y,B),A=c(T),S=c(B),S<A)){w=_,z=g;const R=A;A=S,S=R,T=B}T||(T=d,$(w,y,T));const P=pt(w*2,x),C=o(T,P,A,l+1,h+w);let E;if(C===oe){const R=u(w),W=f(w)-R;E=a(R,W,!0,l+1,h+w,T)}else E=C&&i(w,r,o,a,c,h,l+1);if(E)return!0;B=t,$(z,y,B);const F=pt(z*2,x),I=o(B,F,S,l+1,h+z);let k;if(I===oe){const R=u(z),W=f(z)-R;k=a(R,W,!0,l+1,h+z,B)}else k=I&&i(z,r,o,a,c,h,l+1);return!!k}}}(),oi=function(){const d=new ct,t=new ct,s=new D,e=new J,i=new J;return function n(r,o,a,c,h=null){let l=r*2,u=Ut,f=yt,m=xt;if(h===null&&(a.boundingBox||a.computeBoundingBox(),e.set(a.boundingBox.min,a.boundingBox.max,c),h=e),pt(l,f)){const x=o,p=x.index,b=x.attributes.position,g=a.index,_=a.attributes.position,w=kt(r,m),z=Yt(l,f);if(s.copy(c).invert(),a.boundsTree)return $(r,u,i),i.matrix.copy(s),i.needsUpdate=!0,a.boundsTree.shapecast({intersectsBounds:S=>i.intersectsBox(S),intersectsTriangle:S=>{S.a.applyMatrix4(c),S.b.applyMatrix4(c),S.c.applyMatrix4(c),S.needsUpdate=!0;for(let T=w*3,B=(z+w)*3;T<B;T+=3)if(Q(t,T,p,b),t.needsUpdate=!0,S.intersectsTriangle(t))return!0;return!1}});for(let A=w*3,S=z+w*3;A<S;A+=3){Q(d,A,p,b),d.a.applyMatrix4(s),d.b.applyMatrix4(s),d.c.applyMatrix4(s),d.needsUpdate=!0;for(let T=0,B=g.count;T<B;T+=3)if(Q(t,T,g,_),t.needsUpdate=!0,d.intersectsTriangle(t))return!0}}else{const x=r+8,p=m[r+6];return $(x,u,Rt),!!(h.intersectsBox(Rt)&&n(x,o,a,c,h)||($(p,u,Rt),h.intersectsBox(Rt)&&n(p,o,a,c,h)))}}}();function ms(d,t,s,e){return $(d,t,Rt),s.intersectBox(Rt,e)}const Ds=[];let ps,Ut,yt,xt;function jt(d){ps&&Ds.push(ps),ps=d,Ut=new Float32Array(d),yt=new Uint16Array(d),xt=new Uint32Array(d)}function ys(){ps=null,Ut=null,yt=null,xt=null,Ds.length&&jt(Ds.pop())}const Ls=Symbol("skip tree generation"),Xs=new Z,Os=new Z,Vt=new D,Mt=new J,Gt=new J,$t=new M,xs=new M,ai=new M,hi=new M,ci=new M,ge=new Z,K=new xe(()=>new ct);class qt{static serialize(t,s={}){if(s.isBufferGeometry)return console.warn("MeshBVH.serialize: The arguments for the function have changed. See documentation for new signature."),qt.serialize(arguments[0],{cloneBuffers:arguments[2]===void 0?!0:arguments[2]});s={cloneBuffers:!0,...s};const e=t.geometry,i=t._roots,n=e.getIndex();let r;return s.cloneBuffers?r={roots:i.map(o=>o.slice()),index:n.array.slice()}:r={roots:i,index:n.array},r}static deserialize(t,s,e={}){if(typeof e=="boolean")return console.warn("MeshBVH.deserialize: The arguments for the function have changed. See documentation for new signature."),qt.deserialize(arguments[0],arguments[1],{setIndex:arguments[2]===void 0?!0:arguments[2]});e={setIndex:!0,...e};const{index:i,roots:n}=t,r=new qt(s,{...e,[Ls]:!0});if(r._roots=n,e.setIndex){const o=s.getIndex();if(o===null){const a=new G(t.index,1,!1);s.setIndex(a)}else o.array!==i&&(o.array.set(i),o.needsUpdate=!0)}return r}constructor(t,s={}){if(t.isBufferGeometry){if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.")}else throw new Error("MeshBVH: Only BufferGeometries are supported.");if(s=Object.assign({strategy:re,maxDepth:40,maxLeafTris:10,verbose:!0,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,[Ls]:!1},s),s.useSharedArrayBuffer&&typeof SharedArrayBuffer>"u")throw new Error("MeshBVH: SharedArrayBuffer is not available.");this._roots=null,s[Ls]||(this._roots=Ge(t,s),!t.boundingBox&&s.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new Z))),this.geometry=t}refit(t=null){t&&Array.isArray(t)&&(t=new Set(t));const s=this.geometry,e=s.index.array,i=s.attributes.position;let n,r,o,a,c=0;const h=this._roots;for(let u=0,f=h.length;u<f;u++)n=h[u],r=new Uint32Array(n),o=new Uint16Array(n),a=new Float32Array(n),l(0,c),c+=n.byteLength;function l(u,f,m=!1){const y=u*2;if(o[y+15]===Us){const p=r[u+6],b=o[y+14];let g=1/0,_=1/0,w=1/0,z=-1/0,A=-1/0,S=-1/0;for(let T=3*p,B=3*(p+b);T<B;T++){const P=e[T],C=i.getX(P),E=i.getY(P),F=i.getZ(P);C<g&&(g=C),C>z&&(z=C),E<_&&(_=E),E>A&&(A=E),F<w&&(w=F),F>S&&(S=F)}return a[u+0]!==g||a[u+1]!==_||a[u+2]!==w||a[u+3]!==z||a[u+4]!==A||a[u+5]!==S?(a[u+0]=g,a[u+1]=_,a[u+2]=w,a[u+3]=z,a[u+4]=A,a[u+5]=S,!0):!1}else{const p=u+8,b=r[u+6],g=p+f,_=b+f;let w=m,z=!1,A=!1;t?w||(z=t.has(g),A=t.has(_),w=!z&&!A):(z=!0,A=!0);const S=w||z,T=w||A;let B=!1;S&&(B=l(p,f,w));let P=!1;T&&(P=l(b,f,w));const C=B||P;if(C)for(let E=0;E<3;E++){const F=p+E,I=b+E,k=a[F],R=a[F+3],N=a[I],W=a[I+3];a[u+E]=k<N?k:N,a[u+E+3]=R>W?R:W}return C}}}traverse(t,s=0){const e=this._roots[s],i=new Uint32Array(e),n=new Uint16Array(e);r(0);function r(o,a=0){const c=o*2,h=n[c+15]===Us;if(h){const l=i[o+6],u=n[c+14];t(a,h,new Float32Array(e,o*4,6),l,u)}else{const l=o+os/4,u=i[o+6],f=i[o+7];t(a,h,new Float32Array(e,o*4,6),f)||(r(l,a+1),r(u,a+1))}}}raycast(t,s=0){const e=this._roots,i=this.geometry,n=[],r=s.isMaterial,o=Array.isArray(s),a=i.groups,c=r?s.side:s;for(let h=0,l=e.length;h<l;h++){const u=o?s[a[h].materialIndex].side:c,f=n.length;if(jt(e[h]),Ns(0,i,u,t,n),ys(),o){const m=a[h].materialIndex;for(let y=f,x=n.length;y<x;y++)n[y].face.materialIndex=m}}return n}raycastFirst(t,s=0){const e=this._roots,i=this.geometry,n=s.isMaterial,r=Array.isArray(s);let o=null;const a=i.groups,c=n?s.side:s;for(let h=0,l=e.length;h<l;h++){const u=r?s[a[h].materialIndex].side:c;jt(e[h]);const f=vs(0,i,u,t);ys(),f!=null&&(o==null||f.distance<o.distance)&&(o=f,r&&(f.face.materialIndex=a[h].materialIndex))}return o}intersectsGeometry(t,s){const e=this.geometry;let i=!1;for(const n of this._roots)if(jt(n),i=oi(0,e,t,s),ys(),i)break;return i}shapecast(t,s,e){const i=this.geometry;if(t instanceof Function){if(s){const u=s;s=(f,m,y,x)=>{const p=m*3;return u(f,p,p+1,p+2,y,x)}}t={boundsTraverseOrder:e,intersectsBounds:t,intersectsTriangle:s,intersectsRange:null},console.warn("MeshBVH: Shapecast function signature has changed and now takes an object of callbacks as a second argument. See docs for new signature.")}const n=K.getPrimitive();let{boundsTraverseOrder:r,intersectsBounds:o,intersectsRange:a,intersectsTriangle:c}=t;if(a&&c){const u=a;a=(f,m,y,x,p)=>u(f,m,y,x,p)?!0:ye(f,m,i,c,y,x,n)}else a||(c?a=(u,f,m,y)=>ye(u,f,i,c,m,y,n):a=(u,f,m)=>m);let h=!1,l=0;for(const u of this._roots){if(jt(u),h=ri(0,i,o,a,r,l),ys(),h)break;l+=u.byteLength}return K.releasePrimitive(n),h}bvhcast(t,s,e){let{intersectsRanges:i,intersectsTriangles:n}=e;const r=this.geometry.index,o=this.geometry.attributes.position,a=t.geometry.index,c=t.geometry.attributes.position;Vt.copy(s).invert();const h=K.getPrimitive(),l=K.getPrimitive();if(n){let f=function(m,y,x,p,b,g,_,w){for(let z=x,A=x+p;z<A;z++){Q(l,z*3,a,c),l.a.applyMatrix4(s),l.b.applyMatrix4(s),l.c.applyMatrix4(s),l.needsUpdate=!0;for(let S=m,T=m+y;S<T;S++)if(Q(h,S*3,r,o),h.needsUpdate=!0,n(h,l,S,z,b,g,_,w))return!0}return!1};if(i){const m=i;i=function(y,x,p,b,g,_,w,z){return m(y,x,p,b,g,_,w,z)?!0:f(y,x,p,b,g,_,w,z)}}else i=f}t.getBoundingBox(Os),Os.applyMatrix4(s);const u=this.shapecast({intersectsBounds:f=>Os.intersectsBox(f),intersectsRange:(f,m,y,x,p,b)=>(Xs.copy(b),Xs.applyMatrix4(Vt),t.shapecast({intersectsBounds:g=>Xs.intersectsBox(g),intersectsRange:(g,_,w,z,A)=>i(f,m,g,_,x,p,z,A)}))});return K.releasePrimitive(h),K.releasePrimitive(l),u}intersectsBox(t,s){return Mt.set(t.min,t.max,s),Mt.needsUpdate=!0,this.shapecast({intersectsBounds:e=>Mt.intersectsBox(e),intersectsTriangle:e=>Mt.intersectsTriangle(e)})}intersectsSphere(t){return this.shapecast({intersectsBounds:s=>t.intersectsBox(s),intersectsTriangle:s=>s.intersectsSphere(t)})}closestPointToGeometry(t,s,e={},i={},n=0,r=1/0){t.boundingBox||t.computeBoundingBox(),Mt.set(t.boundingBox.min,t.boundingBox.max,s),Mt.needsUpdate=!0;const o=this.geometry,a=o.attributes.position,c=o.index,h=t.attributes.position,l=t.index,u=K.getPrimitive(),f=K.getPrimitive();let m=xs,y=ai,x=null,p=null;i&&(x=hi,p=ci);let b=1/0,g=null,_=null;return Vt.copy(s).invert(),Gt.matrix.copy(Vt),this.shapecast({boundsTraverseOrder:w=>Mt.distanceToBox(w),intersectsBounds:(w,z,A)=>A<b&&A<r?(z&&(Gt.min.copy(w.min),Gt.max.copy(w.max),Gt.needsUpdate=!0),!0):!1,intersectsRange:(w,z)=>{if(t.boundsTree)return t.boundsTree.shapecast({boundsTraverseOrder:A=>Gt.distanceToBox(A),intersectsBounds:(A,S,T)=>T<b&&T<r,intersectsRange:(A,S)=>{for(let T=A*3,B=(A+S)*3;T<B;T+=3){Q(f,T,l,h),f.a.applyMatrix4(s),f.b.applyMatrix4(s),f.c.applyMatrix4(s),f.needsUpdate=!0;for(let P=w*3,C=(w+z)*3;P<C;P+=3){Q(u,P,c,a),u.needsUpdate=!0;const E=u.distanceToTriangle(f,m,x);if(E<b&&(y.copy(m),p&&p.copy(x),b=E,g=P/3,_=T/3),E<n)return!0}}}});{const A=l?l.count:h.count;for(let S=0,T=A;S<T;S+=3){Q(f,S,l,h),f.a.applyMatrix4(s),f.b.applyMatrix4(s),f.c.applyMatrix4(s),f.needsUpdate=!0;for(let B=w*3,P=(w+z)*3;B<P;B+=3){Q(u,B,c,a),u.needsUpdate=!0;const C=u.distanceToTriangle(f,m,x);if(C<b&&(y.copy(m),p&&p.copy(x),b=C,g=B/3,_=S/3),C<n)return!0}}}}}),K.releasePrimitive(u),K.releasePrimitive(f),b===1/0?null:(e.point?e.point.copy(y):e.point=y.clone(),e.distance=b,e.faceIndex=g,i&&(i.point?i.point.copy(p):i.point=p.clone(),i.point.applyMatrix4(Vt),y.applyMatrix4(Vt),i.distance=y.sub(i.point).length(),i.faceIndex=_),e)}closestPointToPoint(t,s={},e=0,i=1/0){const n=e*e,r=i*i;let o=1/0,a=null;if(this.shapecast({boundsTraverseOrder:h=>($t.copy(t).clamp(h.min,h.max),$t.distanceToSquared(t)),intersectsBounds:(h,l,u)=>u<o&&u<r,intersectsTriangle:(h,l)=>{h.closestPointToPoint(t,$t);const u=t.distanceToSquared($t);return u<o&&(xs.copy($t),o=u,a=l),u<n}}),o===1/0)return null;const c=Math.sqrt(o);return s.point?s.point.copy(xs):s.point=xs.clone(),s.distance=c,s.faceIndex=a,s}getBoundingBox(t){return t.makeEmpty(),this._roots.forEach(e=>{$(0,new Float32Array(e),ge),t.union(ge)}),t}}onmessage=function({data:d}){let t=performance.now();function s(r){const o=performance.now();(o-t>=10||r===1)&&(postMessage({error:null,serialized:null,position:null,progress:r}),t=o)}const{index:e,position:i,options:n}=d;try{const r=new Is;if(r.setAttribute("position",new G(i,3,!1)),e&&r.setIndex(new G(e,1,!1)),n.includedProgressCallback&&(n.onProgress=s),n.groups){const c=n.groups;for(const h in c){const l=c[h];r.addGroup(l.start,l.count,l.materialIndex)}}const o=new qt(r,n),a=qt.serialize(o,{copyIndexBuffer:!1});postMessage({error:null,serialized:a,position:i,progress:1},[a.index.buffer,i.buffer,...a.roots].filter(c=>typeof SharedArrayBuffer>"u"||!(c instanceof SharedArrayBuffer)))}catch(r){postMessage({error:r,serialized:null,position:null,progress:1})}}})();
